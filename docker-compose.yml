version: "3.9"

services:
  app-db:
    image: postgres:16
    environment:
      POSTGRES_USER: bloodhound
      POSTGRES_PASSWORD: strongpass123
      POSTGRES_DB: bloodhound
    # Uncomment to expose Postgres externally (recommended only for debugging)
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bloodhound -d bloodhound -h 127.0.0.1 -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  graph-db:
    image: neo4j:4.4.42
    environment:
      NEO4J_AUTH: neo4j/strongpass123
      NEO4J_dbms_allow__upgrade: "true"
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-data:/data
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null -q http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  bloodhound:
    image: specterops/bloodhound:latest
    depends_on:
      app-db:
        condition: service_healthy
      graph-db:
        condition: service_healthy
    environment:
      bhe_disable_cypher_complexity_limit: "false"
      bhe_enable_cypher_mutations: "false"
      bhe_graph_query_memory_limit: "2"
      # Fix: explicitly disable TLS and ensure credentials match Postgres
      bhe_database_connection: "user=bloodhound password=strongpass123 dbname=bloodhound host=app-db sslmode=disable"
      bhe_neo4j_connection: "neo4j://neo4j:strongpass123@graph-db:7687/"
      bhe_recreate_default_admin: "false"
      bhe_graph_driver: "neo4j"
    ports:
      - "8080:8080"
    # Optional: mount custom config if needed
    # volumes:
    #   - ./bloodhound.config.json:/bloodhound.config.json:ro

volumes:
  neo4j-data:
  postgres-data: